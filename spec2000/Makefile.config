# -*- makefile -*-

ifeq ($(findstring x86_64,$(MACHTYPE)),x86_64)
__x86_64__=1
endif

CC = gcc
CXX = g++
CCLINK = gcc
FC = gfortran-4.0.2

#
# The -static flag is not necessary, but static linking makes it
# easier to distribute these benchmarks across systems. The Fortran
# benchmarks require libgfortran.so which may not be installed.
#
ifdef __x86_64__
CFLAGS = -g -static -DBENCHMARK -DSPEC_CPU2000 -O3 -march=k8 -funroll-loops -fno-trapping-math -mfpmath=sse -funit-at-a-time -ffast-math -fprefetch-loop-arrays -mfpmath=sse -include ../../ptlcalls.h
FFLAGS = -g -static -DBENCHMARK -DSPEC_CPU2000 -O3 -march=k8 -funroll-loops -fno-trapping-math -mfpmath=sse -funit-at-a-time -ffast-math -fprefetch-loop-arrays -mfpmath=sse
else
CFLAGS = -g -static -DBENCHMARK -DSPEC_CPU2000 -O3 -march=pentium4 -funroll-loops -fno-trapping-math -mfpmath=sse -funit-at-a-time -ffast-math -fprefetch-loop-arrays -mfpmath=sse -include ../../ptlcalls.h
FFLAGS = -g -static -DBENCHMARK -DSPEC_CPU2000 -O3 -march=pentium4 -funroll-loops -fno-trapping-math -mfpmath=sse -funit-at-a-time -ffast-math -fprefetch-loop-arrays -mfpmath=sse
endif

# FORTRANFLAGS = -lfrtbegin -lg2c ../../ptlcalls.o
LINKFLAGS = -lm

# In component Makefiles, add the following to enable Fortran compilation:
# USE_FORTRAN = $(FORTRANFLAGS)

%.o: %.c
	$(CC) -c $(CFLAGS) $<

%.o: %.f
	$(FC) -c $(FFLAGS) $<

%.o: %.f90
	$(FC) -c $(FFLAGS) $<

%.o: %.cpp
	g++ -c $(CFLAGS) $<

%.o: %.cc
	g++ -c $(CFLAGS) $<

all: $(OUTPUT)

test.dat-64bit.S: test.dat Makefile
	/usr/bin/objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:x86-64:intel --disassemble-all test.dat > test.dat-64bit.S
	/usr/bin/objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:x86-64 --disassemble-all test.dat > test.dat-64bit.alt.S

test.dat-32bit.S: test.dat Makefile
	/usr/bin/objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386:intel --disassemble-all test.dat > test.dat-32bit.S
	/usr/bin/objdump --adjust-vma=$(BASEADDR) -rtd -b binary -m i386 --disassemble-all test.dat > test.dat-32bit.alt.S

ifdef USE_FORTRAN
$(OUTPUT): $(SOURCES)
ifdef __x86_64__
	$(FC) $(FFLAGS) $(SOURCES) -o $(OUTPUT) ../../ptlcalls.o
else
	$(FC) $(FFLAGS) $(SOURCES) -o $(OUTPUT) ../../ptlcalls-32bit.o
endif
else
$(OUTPUT): $(SOURCES)
	$(CCLINK) $(CFLAGS) $(SOURCES) -o $(OUTPUT) $(LINKFLAGS)
endif

run:
	../../ptlsim $(COMMAND)
	../../ptlstats ptlsim.stats > ptlsim.stats.txt

use64:
	ln -sf $(OUTPUT)-64bit $(OUTPUT) 

use32:
	ln -sf $(OUTPUT)-32bit $(OUTPUT)

usenone:
	rm -f `find -type l -name $(OUTPUT)`

run-native:
	$(COMMAND)

BENCHNAME = `echo $(COMMAND) | cut -d" " -f1`

# Example only:
graphs:
	ptlstats -histogram final/dcache/histograms/L1/hitcount -title "$(BENCHNAME) L1 hit count" -percentile 100 ptlsim.stats > L1-hitcount.svg
	ptlstats -histogram final/dcache/histograms/L1/lifetime -title "$(BENCHNAME) L1 lifetime" -percentile 90 ptlsim.stats > L1-lifetime.svg
	ptlstats -histogram final/dcache/histograms/L1/deadtime -title "$(BENCHNAME) L1 deadtime" -percentile 90 ptlsim.stats > L1-deadtime.svg
	ptlstats -histogram final/dcache/histograms/L1I/hitcount  -title "$(BENCHNAME) L1I hit count" -percentile 100 ptlsim.stats > L1I-hitcount.svg
	ptlstats -histogram final/dcache/histograms/L1I/lifetime -title "$(BENCHNAME) L1I lifetime" -percentile 90 ptlsim.stats > L1I-lifetime.svg
	ptlstats -histogram final/dcache/histograms/L1I/deadtime -title "$(BENCHNAME) L1I deadtime" -percentile 90 ptlsim.stats > L1I-deadtime.svg
	ptlstats -histogram final/dcache/histograms/L2/hitcount  -title "$(BENCHNAME) L2 hit count" -percentile 100 ptlsim.stats > L2-hitcount.svg
	ptlstats -histogram final/dcache/histograms/L2/lifetime -title "$(BENCHNAME) L2 lifetime" -percentile 90 ptlsim.stats > L2-lifetime.svg
	ptlstats -histogram final/dcache/histograms/L2/deadtime -title "$(BENCHNAME) L2 deadtime" -percentile 90 ptlsim.stats > L2-deadtime.svg
	ptlstats -histogram final/dcache/histograms/L3/hitcount  -title "$(BENCHNAME) L3 hit count" -percentile 100 ptlsim.stats > L3-hitcount.svg
	ptlstats -histogram final/dcache/histograms/L3/lifetime -title "$(BENCHNAME) L3 lifetime" -percentile 90 ptlsim.stats > L3-lifetime.svg
	ptlstats -histogram final/dcache/histograms/L3/deadtime -title "$(BENCHNAME) L3 deadtime" -percentile 90 ptlsim.stats > L3-deadtime.svg
	../svg2eps L*.svg
	../layouteps-3x1 $(BENCHNAME)-L1-graphs.ps L1-hitcount.eps L1-lifetime.eps L1-deadtime.eps
	../layouteps-3x1 $(BENCHNAME)-L1I-graphs.ps L1I-hitcount.eps L1I-lifetime.eps L1I-deadtime.eps
	../layouteps-3x1 $(BENCHNAME)-L2-graphs.ps L2-hitcount.eps L2-lifetime.eps L2-deadtime.eps
	../layouteps-3x1 $(BENCHNAME)-L3-graphs.ps L3-hitcount.eps L3-lifetime.eps L3-deadtime.eps
	gs -q -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=$(BENCHNAME)-graphs.pdf $(BENCHNAME)-L*-graphs.ps -c quit
	rm -f $(BENCHNAME)-L*-graphs.ps

clean:
	rm -f *.o *.mod $(OUTPUT)

